@keyframes move-dash {
    0% {
        stroke-dashoffset: 0;
        transform: translateX(-1px);
    }

    50% {
        transform: translateX(+1px);
    }

    100% {
        stroke-dashoffset: 100%;
        transform: translateX(-1px);
    }
}

@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

@font-face {
    font-family: 'Roboto';
    src: url('assets/RobotoFlex-VariableFont.ttf');
}

@font-face {
    font-family: 'Roboto Mono';
    src: url('assets/RobotoMono-VariableFont.ttf');
}

@layer base, base1;

:root {
    color-scheme: light dark;
    --color-red: oklch(66% 0.125 34);
    --color-red-light: oklch(85% 0.125 34);
    --color-red-dark: oklch(50% 0.125 34);

    --color-green: oklch(66% 0.125 178);
    --color-green-light: oklch(85% 0.125 178);
    --color-green-dark: oklch(50% 0.125 178);

    --color-blue: oklch(66% 0.125 245);
    --color-blue-light: oklch(85% 0.125 245);
    --color-blue-dark: oklch(50% 0.125 245);

    --color-yellow: oklch(85% 0.125 106);
    --color-yellow-light: oklch(95% 0.125 106);
    --color-yellow-dark: oklch(66% 0.125 106);

    --color-purple: oklch(66% 0.125 322);
    --color-purple-light: oklch(85% 0.125 322);
    --color-purple-dark: oklch(50% 0.125 322);

    --color-red-o: color-mix(in oklab, var(--color-red) 20%, transparent);
    --color-green-o: color-mix(in oklab, var(--color-green) 20%, transparent);
    --color-blue-o: color-mix(in oklab, var(--color-blue) 20%, transparent);
    --color-yellow-o: color-mix(in oklab, var(--color-yellow) 20%, transparent);
    --color-purple-o: color-mix(in oklab, var(--color-purple) 20%, transparent);

    --color-red-b: color-mix(in oklab, var(--color-red) 20%, var(--color-background));
    --color-green-b: color-mix(in oklab, var(--color-green) 20%, var(--color-background));
    --color-blue-b: color-mix(in oklab, var(--color-blue) 20%, var(--color-background));
    --color-yellow-b: color-mix(in oklab, var(--color-yellow) 20%, var(--color-background));
    --color-purple-b: color-mix(in oklab, var(--color-purple) 20%, var(--color-background));

    --color-primary: var(--color-blue);
    --color-primary-s1: var(--color-blue-dark);
    --color-primary-s2: var(--color-blue-light);
    --color-secondary: var(--color-green);
    --color-tertiary: var(--color-red);
    --color-quaternary: var(--color-yellow);
    --color-quinary: var(--color-pink);
    --color-primary-o: rgba(86, 156, 214, 20%);
    --color-primary-shade-o: rgb(29, 79, 120, 20%);
    --color-secondary-o: rgba(78, 201, 176, 20%);
    --color-tertiary-o: rgba(244, 135, 113, 20%);
    --color-foreground: #1E1E1E;
    --color-halfway: #7E7E7E;
    --color-halfway-o: rgb(126, 126, 126, 20%);
    --color-halfway-fg: color-mix(in oklab, var(--color-halfway), var(--color-foreground));
    --color-halfway-bg: color-mix(in oklab, var(--color-halfway), var(--color-background));
    --color-background: #fff;
    --color-label: var(--color-primary);

    font-size: 1rem;
    line-height: 1.5rem;
    font-weight: 400;

    color: var(--color-foreground);
    background-color: var(--color-background);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;

    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;
}

:root:has(#body.theme-dark) {
    color-scheme: dark;
    --color-primary-s1: var(--color-blue-light);
    --color-primary-s2: var(--color-blue-dark);
    --color-primary-o: rgba(86, 156, 214, 30%);
    --color-primary-shade-o: rgba(156, 220, 254, 20%);
    --color-secondary-o: rgba(244, 135, 113, 20%);
    --color-tertiary-o: rgba(220, 208, 143, 20%);
    --color-foreground: #D4D4D4;
    --color-halfway: #7E7E7E;
    --color-background: #1E1E1E;
}

:root:has(#body.theme-light) {
    color-scheme: light;
}

@media screen and (prefers-color-scheme: dark) {
    :root:not(:has(#body.theme-light)) {
        color-scheme: dark;
        --color-primary-s1: var(--color-blue-light);
        --color-primary-s2: var(--color-blue-dark);
        --color-primary-o: rgba(86, 156, 214, 30%);
        --color-primary-shade-o: rgba(156, 220, 254, 20%);
        --color-secondary-o: rgba(244, 135, 113, 20%);
        --color-tertiary-o: rgba(220, 208, 143, 20%);
        --color-foreground: #D4D4D4;
        --color-halfway: #7E7E7E;
        --color-background: #1E1E1E;
    }
}

@media (forced-colors: active) {
    :root {
        --color-primary: Highlight;
        --color-primary-s1: #9CDCFE;
        --color-primary-s2: #1d4f78;
        --color-secondary: LinkText;
        --color-tertiary: ActiveText;
        --color-quaternary: AccentColorText;
        --color-quinary: BottonText;
        --color-primary-o: rgba(86, 156, 214, 30%);
        --color-primary-shade-o: rgba(156, 220, 254, 20%);
        --color-secondary-o: rgba(244, 135, 113, 20%);
        --color-tertiary-o: rgba(220, 208, 143, 20%);
        --color-foreground: CanvasText;
        --color-halfway: GrayText;
        --color-background: Canvas;
        forced-color-adjust: none;
    }
}

html {
    min-height: 100vh;
    overflow-y: scroll;
}

body {
    font-family: "Roboto", sans-serif;
    margin: 0;
    color: var(--color-foreground);
    background-color: var(--color-background);
    padding: .5rem;
    min-height: 100vh;
    box-sizing: border-box;
    overflow-y: clip;
    display: flex;
    flex-direction: column;
    justify-items: stretch;
    overscroll-behavior: none;

    &.report {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
}

iframe {
    width: 100%;
    height: 50em;
    border: 2px solid var(--color-halfway);
}

h1,
h2,
h3,
h4 {
    font-weight: 500;
}

h1 {
    color: var(--color-primary);
    font-size: 2rem;
    padding-top: 1rem;
}

a:not(.button) {
    color: var(--color-primary);
    cursor: pointer;

    &:hover {
        color: var(--color-secondary);
    }

    &:active {
        color: var(--color-tertiary);
    }
}

sup,
sub {
    font-family: "Roboto Mono", monospace;
}

dialog {
    border: 2px solid var(--color-foreground);
    background-color: var(--color-background);

    &>h1:first-child {
        margin-top: 0;
    }
}

.wrap {
    margin-left: 1rem;
    word-wrap: break-word;
    word-break: break-all;
    white-space: pre-wrap;
}

.formula,
.example {
    font-family: monospace;
    border: 2px solid var(--color-halfway-bg);
    border-radius: 6px;
    padding: 2px;
    user-select: all;

    &.empty {
        color: var(--color-halfway-fg);
    }
}

.modification,
#custom-mod-dialog {

    .mass,
    .aminoacid {
        color: var(--color-yellow);
    }

    .ontology {
        color: var(--color-purple);
    }

    .name,
    .position {
        color: var(--color-green);
    }

    .index {
        color: var(--color-blue);
    }

    .cross-id-system {
        color: var(--color-halfway-fg);
    }
}

/* Input general */

.block {
    display: block
}

@layer base {

    button,
    .button {
        --_clr-main: var(--color-primary);
        --_clr-text: var(--color-background);
        --_clr-active: var(--color-foreground);
        --_clr-hover: var(--color-halfway-fg);

        -webkit-user-select: none;
        user-select: none;
        border: 2px solid var(--_clr-main);
        cursor: pointer;
        background: var(--_clr-main);
        color: var(--_clr-text);
        border-radius: 1000px;
        font-size: 1rem;
        padding: .25rem;
        text-decoration: none;

        &:hover {
            border-color: var(--_clr-hover);
        }

        &:focus-visible {
            border-color: var(--_clr-active);
            outline: none;
        }

        &:active {
            border-color: var(--_clr-active);
            background-color: var(--_clr-active);
        }

        &.secondary {
            --_clr-main: var(--color-primary-s2);
            --_clr-text: var(--color-background);
            --_clr-active: var(--color-foreground);
            --_clr-hover: var(--color-halfway-fg);
        }

        &.square-left {
            border-radius: 0 1000px 1000px 0;
        }

        &.square-right {
            border-radius: 1000px 0 0 1000px;
        }

        &.square {
            border-radius: 0;
        }
    }

    .joined-button button {
        border-radius: 0;
        position: relative;

        &:first-of-type {
            border-radius: 1000px 0 0 1000px;
        }

        &:not(:first-of-type)::before {
            content: "";
            display: block;
            height: calc(100% - 8px);
            width: 2px;
            background-color: currentColor;
            position: absolute;
            left: -3px;
        }

        &:last-of-type {
            border-radius: 0 1000px 1000px 0;
        }
    }

    :is(input,
        textarea,
        .peptide-input,
        .input[contentEditable]) {
        -webkit-appearance: none;
        appearance: none;
    }

    :is(input,
        select,
        textarea,
        .peptide-input,
        .input[contentEditable]) {
        border-radius: 0;
        padding: .2rem;
        cursor: pointer;
        border: 2px solid var(--color-halfway);
        cursor: pointer;
        background: var(--color-background);
        font-size: 1rem;
        font-family: inherit;
        color: currentColor;

        &:not(:disabled):hover {
            border-color: var(--color-halfway-fg);
        }

        &:not(:disabled):focus-visible {
            border-color: var(--color-foreground);
            outline: none;
        }

        &:not(:disabled):active {
            border-color: var(--color-primary);
        }

        &:disabled {
            background-color: var(--color-halfway-bg);
            cursor: not-allowed;
        }
    }

    .input[contentEditable]:empty::after {
        content: attr(placeholder);
        display: inline;
        color: var(--color-halfway);
        text-overflow: ellipsis;
    }

    textarea.wide {
        width: 100%;
        resize: vertical;
        min-height: 1rem;
    }

    input[type=checkbox]:not([switch]),
    :not(.select-box)>input[type=radio] {
        border-radius: 5%;
        background-color: var(--color-light);
        border: 2px solid var(--color-halfway);
        background-color: var(--color-halfway);
        box-shadow: none;
        cursor: pointer;
        -webkit-appearance: none;
        appearance: none;
        height: 14px;
        width: 14px;
        vertical-align: middle;
        margin-right: 1rem;
        box-sizing: border-box;


        &:checked {
            background-color: var(--color-primary);
            border-color: var(--color-primary);

            &::before {
                content: "";
                height: 6px;
                width: 6px;
                background-color: var(--color-background);
                float: none;
                margin: 0;
                top: -1px;
                left: -1px;
                display: block;
                position: relative;
            }
        }

        &:focus-visible,
        &:hover {
            box-shadow: none;
            border-color: var(--color-halfway-fg);
        }
    }

    .multi-checkbox>label {
        display: inline-block;
        margin-right: .5rem;

        &>input[type=checkbox] {
            margin-right: .25rem;
        }
    }

    :not(.select-box)>input[type=radio],
    :not(.select-box)>input[type=radio]:checked::before {
        border-radius: 50%;
    }

    input[type=checkbox][switch] {
        appearance: none;
        width: 20px;
        height: 11px;
        box-sizing: content-box;
        border-radius: 1000px;
        background: var(--color-halfway);
        position: relative;
        vertical-align: middle;
        margin-right: 1ch;
        cursor: pointer;

        &:checked {
            background-color: var(--color-primary);
            border-color: var(--color-primary);
        }

        &:hover {
            border-color: var(--color-halfway-fg);
        }

        &::after {
            content: "";
            border-radius: 1000px;
            display: block;
            position: absolute;
            top: 0;
            bottom: 0;
            left: 0;
            width: 17px;
            height: 17px;
            background-color: var(--color-foreground);
        }

        &:checked::after {
            transform: translate(1ch);
        }
    }

    label:has(input[type=checkbox]) {
        -webkit-user-select: none;
        user-select: none;
        cursor: pointer;
    }

    .select-box {
        border-radius: 1000px;
        --_clr-border: var(--color-halfway);
        border: 2px solid var(--_clr-border);
        padding: 2px;
        padding-bottom: 1px;
        width: max-content;
        cursor: pointer;

        & input {
            display: none;
        }

        &:hover {
            --_clr-border: var(--color-halfway-fg);
        }

        & label {
            padding: .25rem .5rem;
            margin: 0 -4px;
            -webkit-user-select: none;
            user-select: none;
            border: 2px solid transparent;
            cursor: pointer;
            border-radius: 1000px;

            &:not(:first-child) {
                margin-left: 2px;
            }

            &:where(:has(input:checked)) {
                background-color: var(--color-primary);
                border-color: var(--color-primary);
                color: var(--color-background);
            }

            &:hover {
                border-color: var(--color-halfway-fg)
            }
        }
    }

    input[type=range] {
        -webkit-appearance: none;
        appearance: none;
        background: none;
        border: none !important;

        &::-webkit-slider-runnable-track {
            -webkit-appearance: none;
            appearance: none;
            box-shadow: none;
            border: none;
            background: var(--color-foreground);
            height: 4px;
            border-radius: 1000px;
        }

        &::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            box-shadow: none;
            border: 2px solid var(--color-foreground);
            background: var(--color-foreground);
            box-sizing: border-box;
            height: 2ch;
            width: 2ch;
            border-radius: 50%;
            margin-top: calc(-1ch + 2px);
        }

        &:hover::-webkit-slider-thumb {
            border-color: var(--color-halfway-fg);
        }

        &:focus-visible::-webkit-slider-thumb {
            border-color: var(--color-foreground);
        }

        &:active::-webkit-slider-thumb {
            border-color: var(--color-primary);
        }
    }

    .justify-end {
        justify-self: end;
    }
}

/* Scrollbar */

/* Works in any browser but Firefox */
::-webkit-scrollbar {
    background-color: var(--color-halfway);
}

::-webkit-scrollbar-thumb {
    background-color: var(--color-primary);
}

/* Only works in Firefox, but it is the proper standard */
* {
    scrollbar-color: var(--color-primary) var(--color-halfway);
}

@media print {

    ::-webkit-scrollbar {
        display: none;
    }

    * {
        scrollbar-width: none;
    }

    .overview-link {
        display: none;
    }

    h1 {
        padding-top: 0;
    }
}

/* Table */

table {
    border-collapse: collapse;
    max-width: 100%;
    table-layout: fixed;
}

.wide-table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;

    & td:not(:last-child),
    & th:not(:last-child) {
        border-right: none;
    }

    & td {
        border-top: none;
    }

    & thead {
        position: sticky;
        top: 0;
    }
}

td,
th {
    border: 1px solid var(--color-halfway);
    padding: .1rem;
}

td.center {
    text-align: center;
}

th {
    color: var(--color-primary);
    background: var(--color-background);
    border: 2px solid var(--color-primary);
    white-space: normal;
    overflow: visible;
    text-overflow: ellipsis;
    font-weight: 500;
    position: relative;
}

.density {
    & svg {
        width: 100%;
        height: 100%;
    }

    & .line {
        stroke: var(--color-primary);
        fill: transparent;
    }

    & .volume {
        fill: var(--color-primary-o);
    }

    & .x-axis {
        display: flex;
        justify-content: space-between;
        border-top: 2px solid var(--color-foreground);
        margin-top: -2px;
    }
}

/* Collapsible regions */

input[type=checkbox]:has(+.collapsible) {
    display: none;
}

input:not(:checked)+.collapsible {
    border-left-color: transparent;
    border-right-color: transparent;
    border-bottom: none;
    padding-bottom: 0;

    &>legend::after {
        content: "+";
    }

    &>*:not(:first-child):not(legend) {
        display: none;
    }
}

.collapsible {
    margin-top: 1rem;
    position: relative;
    border: 2px solid var(--color-halfway);

    &>legend {
        cursor: pointer;
        user-select: none;
        font-size: 1.5rem;

        &:hover {
            color: var(--color-halfway-fg);
        }

        &:active {
            color: var(--color-primary);
        }

        &::before {
            content: "";
            right: 0;
            left: 0;
            height: 2ch;
            position: absolute;
        }

        &::after {
            content: "-";
            width: 1ch;
            right: 1ch;
            text-align: center;
            position: absolute;
            background: var(--color-background);
            padding: 0 2px;
        }
    }
}

/* Spectrum */

.spectrum {
    --color: var(--color-purple-light);
    display: grid;
    grid-template-columns: 1fr max-content;
    grid-template-rows: max-content max-content max-content max-content;
    --fs-peptide: 1.25rem;
    --stroke-peptide: 2px;
    --fs-spectrum: 1rem;
    --stroke-spectrum: 2px;
    --stroke-spectrum-unassigned: 1px;
    --width: 100%;
    --height: 250px;

    & .legend {
        display: flex;
        align-items: center;
        grid-column: 1/3;
    }

    &.legend-none {
        --color: var(--color-halfway);
    }
}

.spectrum .ion-series {
    display: grid;
    grid-template-rows: 1fr 1fr;
    grid-template-columns: 1fr max-content;
    grid-template-areas: "top side" "bottom side";
    column-gap: 1ch;

    & .top,
    & .bottom {
        display: grid;
        grid-template-columns: max-content 1fr 1fr max-content;
        grid-template-rows: repeat(2, 1fr);
    }

    & .top {
        padding-left: 6ch;
        grid-area: top;
    }

    & .bottom {
        padding-right: 6ch;
        grid-area: bottom;
    }

    & .side {
        display: flex;
        flex-direction: column;
        justify-content: center;
        grid-area: side;
        flex-wrap: wrap;
        max-height: 6rem;
    }

    & .n-term {
        grid-row: 1;
        grid-column: 1;
    }

    & .a {
        grid-row: 1;
        grid-column: 2;
    }

    & .b {
        grid-row: 1;
        grid-column: 3;
    }

    & .c {
        grid-row: 1;
        grid-column: 4;
    }

    & .d {
        grid-row: 2;
        grid-column: 3;
    }

    & .v {
        grid-row: 1;
        grid-column: 3;
    }

    & .w {
        grid-row: 1;
        grid-column: 2;
    }

    & .x {
        grid-row: 2;
        grid-column: 1;
    }

    & .y {
        grid-row: 2;
        grid-column: 2;
    }

    & .z {
        grid-row: 2;
        grid-column: 3;
    }

    & .c-term {
        grid-row: 2;
        grid-column: 4;
    }

    & * {
        padding: 0 .2rem;
        color: var(--color);
    }
}

.spectrum .legend .ion {
    cursor: crosshair;
    -webkit-user-select: none;
    user-select: none;
    padding: 0 .2rem;
    font-family: Roboto Mono;

    &:hover,
    &:focus {
        background-color: var(--color-primary-o);
    }

    &.permanent {
        background-color: var(--color-secondary-o);
    }
}

.spectrum .legend .other {
    -webkit-user-select: none;
    user-select: none;
}

.spectrum .legend .title {
    font-style: italic;
    --color: var(--color-halfway);
    margin-right: .5rem;
}

.spectrum input[type=radio]+label:not([for^=collapsible]),
.spectrum input[type=checkbox]+label:not([for^=collapsible]) {
    margin: 0 .5rem;
    padding: .1em .25em;
    border: 2px solid var(--color-halfway);
    border-radius: .2rem;
    -webkit-user-select: none;
    user-select: none;
    cursor: pointer;
}

.spectrum input[type=radio]:checked+label:not([for^=collapsible]),
.spectrum input[type=checkbox]:checked+label:not([for^=collapsible]) {
    border-color: var(--color-primary);
}

.spectrum .all-settings {
    display: flex;
    flex-wrap: wrap;
    gap: 1ch;

    &>* {
        flex-grow: 1;
        flex-basis: 350px;
    }
}

.spectrum .manual-zoom input[type=number],
.spectrum .settings input:not([type=checkbox]):not([type=range]) {
    width: 12ch;
}

.spectrum .settings .has-slider {
    --color: var(--color-foreground);
    cursor: default;

    & input[type=range] {
        min-width: 6em;
        max-width: 10em;
        vertical-align: middle;
        cursor: pointer;
    }

    & input[type=number] {
        width: 6ch;
    }
}

.spectrum .settings {
    border: 2px solid var(--color-halfway);
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    gap: .5rem;
    padding: .5rem;
    width: fit-content;
    margin-bottom: .5rem;
    grid-column: 1 / -1;

    & .row {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: 1ch;
    }

    & .row.align {
        display: flex;
        justify-content: flex-end;

        &>*:first-child {
            flex-grow: 1;
            margin-right: 1ch;
        }
    }

    & p {
        margin: 0;
    }

    & input:not([type=checkbox]) {
        width: 5rem;
    }

    & #highlight {
        /* padding-bottom: 0; */

        & .colour {
            width: 2ch;
            padding: 2px;
            position: relative;
            background-color: var(--color);
            display: inline-block;
            height: 2ch;
            background-clip: content-box;
            vertical-align: middle;
            margin-top: -3px;

            &:has(input[value=red]) {
                --color: var(--color-red);
            }

            &:has(input[value=green]) {
                --color: var(--color-green);
            }

            &:has(input[value=blue]) {
                --color: var(--color-blue);
            }

            &:has(input[value=yellow]) {
                --color: var(--color-yellow);
            }

            &:has(input[value=purple]) {
                --color: var(--color-purple);
            }

            &:has(input[value=remove]) {
                --color: transparent;
                text-align: center;
            }
        }
    }

    & #clear-colour,
    & #reset-zoom {
        width: max-content;
    }

    & fieldset {
        border-bottom: none;
        border-left: none;
        border-right: none;
        padding: 0;

        & legend {
            margin: .5rem;
        }
    }
}


.spectrum .wrapper {
    grid-column: 1/-1;
    display: flex;
    flex-direction: column;

    &.second {
        flex-direction: column-reverse;
    }
}

#identified-peptide-details .complex-peptide {
    display: flex;
    flex-wrap: wrap;
}

#identified-peptide-details .peptide {
    --color: var(--color-purple-light);
    --fs-peptide: 1rem;
    --stroke-peptide: 2px;
}

.spectrum .peptide {
    &>span {
        cursor: crosshair;
        -webkit-user-select: none;
        user-select: none;
        border: 2px solid transparent;

        &:hover {
            border-color: var(--color-halfway-fg);
        }

        &:focus-visible,
        &:active {
            border-color: var(--color-primary);
        }
    }
}

.peptide {
    font-size: var(--fs-peptide);
    margin: 1em;
    display: flex;
    flex-wrap: wrap;
    align-items: flex-end;
    grid-column: 1/3;
    row-gap: .5em;
    --spacing: calc(var(--stroke-peptide) * 1.5);
    --side-spacing: calc(var(--stroke-peptide) * 0.5);
    --width: .6em;
    --height: .8em;
    --fragments-padding: 0px;
    --confidence-padding: 0px;

    .complex-peptide.with-fragments & {
        --fragments-padding: 0.5em;
    }

    .complex-peptide.with-local-confidence & {
        --confidence-padding: 1.1em;
    }

    &>.name {
        border: 2px solid var(--color-foreground);
        border-radius: 100000px;
        text-align: center;
        margin: 0 .5em var(--fragments-padding) 0;
        padding: 0 .25em !important;
    }

    &>span {
        --pad-left: 1px;
        --pad-right: 1px;
        margin: 0 2px 0 -2px;
        background-color: color-mix(in oklab, var(--color-highlight) 20%, var(--color-background));
        position: relative;
        padding: calc(var(--fragments-padding) + var(--confidence-padding)) calc(var(--fragments-padding) + var(--pad-right)) var(--fragments-padding) calc(var(--fragments-padding) + var(--pad-left));
        display: flex;
        flex-direction: column-reverse;
        font-family: 'Roboto Mono';
        box-sizing: content-box;
        max-width: var(--width);
        overflow: visible;

        &::after {
            position: absolute;
            content: "";
            left: 1px;
            right: 1px;
            background-color: var(--color-primary);
            height: calc(var(--confidence) * var(--confidence-padding));
            top: calc((1 - var(--confidence)) * var(--confidence-padding));
        }

        &.modification {
            color: var(--color-blue);
        }

        &.possible-modification {
            color: var(--color-red);
        }

        &.charge-carriers {
            pointer-events: none;
        }

        &.default {
            border-color: var(--color-halfway);
        }

        &.red {
            --color-highlight: var(--color-red);
        }

        &.green {
            --color-highlight: var(--color-green);
        }

        &.blue {
            --color-highlight: var(--color-blue);
        }

        &.yellow {
            --color-highlight: var(--color-yellow);
        }

        &.purple {
            --color-highlight: var(--color-purple);
        }

        &.select {
            border-color: var(--color-primary);
        }

        &.select+.select,
        &.default+.default {
            border-left: none;
            --pad-left: 2px;
        }

        &.select:has(+.select),
        &.default:has(+.default) {
            border-right: transparent;
            --pad-right: 2px;
        }

        & .glycan {
            transform: translate(calc(var(--midpoint) * -1px + var(--width) / 2), 0);
        }
    }

    .corner {
        position: absolute;
        display: block;
        border: var(--stroke-peptide) solid var(--color-highlight, var(--color, red));
        width: var(--width);
        height: var(--height);
        pointer-events: none;

        &.x,
        &.y,
        &.z {
            border-right: none;
            border-bottom: none;
            bottom: calc(var(--fragments-padding) + var(--height));
            left: calc(var(--side-spacing) + var(--pad-left));
        }

        &.y {
            left: calc(var(--spacing) + var(--side-spacing) + var(--pad-left));
            height: calc(var(--height) - var(--spacing));
            width: calc(var(--width) - var(--spacing));
        }

        &.z {
            left: calc(2 * var(--spacing) + var(--side-spacing) + var(--pad-left));
            height: calc(var(--height) - 2 * var(--spacing));
            width: calc(var(--width) - 2 * var(--spacing));
        }

        &.w {
            height: 0;
            border-width: calc(var(--stroke-peptide) * 0.5);
            left: calc(3 * var(--spacing) + var(--side-spacing) + var(--pad-left));
            right: calc(3 * var(--spacing) + var(--side-spacing) + var(--pad-right));
            bottom: calc(var(--fragments-padding) + var(--height) + var(--spacing) + 2 * var(--stroke-peptide));
            width: auto;
        }

        &.a,
        &.b,
        &.c {
            border-left: none;
            border-top: none;
            bottom: 0px;
            right: calc(var(--side-spacing) + var(--pad-right));
        }

        &.a {
            bottom: calc(2 * var(--spacing));
            right: calc(2 * var(--spacing) + var(--side-spacing) + var(--pad-right));
            height: calc(var(--height) - 2 * var(--spacing));
            width: calc(var(--width) - 2 * var(--spacing));
        }

        &.b {
            bottom: var(--spacing);
            right: calc(var(--spacing) + var(--side-spacing) + var(--pad-right));
            height: calc(var(--height) - var(--spacing));
            width: calc(var(--width) - var(--spacing));
        }

        &.d {
            height: 0;
            border-width: calc(var(--stroke-peptide) * 0.5);
            left: calc(3 * var(--spacing) + var(--side-spacing) + var(--pad-left));
            right: calc(3 * var(--spacing) + var(--side-spacing) + var(--pad-right));
            bottom: calc(3 * var(--spacing));
            width: auto;
        }

        &.v {
            height: 0;
            border-width: calc(var(--stroke-peptide) * 0.5);
            left: calc(3 * var(--spacing) + var(--side-spacing) + var(--pad-left));
            right: calc(3 * var(--spacing) + var(--side-spacing) + var(--pad-right));
            bottom: calc(4 * var(--spacing));
            width: auto;
        }
    }

    &>.modification {
        &.term {
            width: var(--spacing);
        }

        &::before {
            content: "";
            display: block;
            position: absolute;
            bottom: calc(var(--height) + var(--fragments-padding) + 2 * var(--spacing));
            left: calc(50% - 0.5 * var(--spacing));
            width: var(--spacing);
            height: var(--spacing);
            border-radius: 50%;
            background-color: var(--color-primary);
        }

        &.term::before {
            top: calc(50% - var(--stroke-peptide));
        }
    }

    &>.possible-modification {
        &.term {
            width: var(--spacing);
        }

        &::after {
            content: "";
            display: block;
            position: absolute;
            top: calc(var(--fragments-padding) + 1.25 * var(--spacing));
            left: calc(50% - 0.5 * var(--spacing));
            width: var(--spacing);
            height: calc(0.5 * var(--spacing));
            background-color: var(--color-red);
        }

        &.term::after {
            top: calc(50% - var(--stroke-peptide));
        }
    }

    &>.modification.possible-modification::before {
        left: calc(50% - 1.5 * var(--spacing));
    }

    &>.modification.possible-modification::after {
        left: calc(50% + 0.5 * var(--spacing));
    }

    &>.cross-link {
        &.term {
            width: 2.5ch;
        }

        color: var(--color-xl, --color-purple-light);

        &::before {
            content: attr(data-cross-links);
            display: block;
            position: absolute;
            top: calc(-6 * var(--spacing));
            left: calc(-1 * var(--spacing));
            height: 1rem;
            font-size: calc(0.5 * var(--fs-peptide));
            color: var(--color-xl, --color-purple-light);
            text-align: center;
            min-width: calc(var(--pad-left) * 2 + var(--pad-right) * 2 + var(--fragments-padding) * 4 + 2ch + 2 * var(--spacing));
            width: fit-content;
        }

        &.term::before {
            font-size: calc(0.75 * var(--fs-peptide));
            top: unset;
        }
    }
}

.spectrum.legend-peptide .peptide>.name,
.spectrum.legend-peptidoform .peptide>.name {
    border-color: var(--color);
    color: var(--color);
}

.spectrum.compact .peptide,
#identified-peptide-details .peptide {
    --width: calc(.5em - var(--side-spacing));

    &>* {
        padding: calc(var(--fragments-padding) + var(--confidence-padding)) var(--pad-right) var(--fragments-padding) var(--pad-left);
    }

    &>.cross-link {
        &.term {
            width: 2ch;
        }

        &::before {
            content: attr(data-cross-links-compact);
            top: calc(-1 * var(--fragments-padding));
            left: calc(0.5* var(--fragments-padding));
        }

        &:not(.term)::before {
            transform: rotate(-90deg);
            transform-origin: left center;
            min-width: calc(var(--pad-left) + var(--pad-right) + var(--fs-peptide));
        }
    }

    .corner.d {
        left: unset;
        height: var(--side-spacing);
    }

    .corner.w {
        height: var(--side-spacing);
    }

}

.spectrum.peptide-intensity-ion {
    --offset: 50%;
    --ion-bar-width-factor: 2;
    --padding: -13px;

    & .corner {
        width: calc(var(--ion-bar-width-factor) * var(--stroke-peptide));
        height: calc(var(--intensity) / var(--max-position-intensity) * (0.5em + var(--fragments-padding)));
        background-color: var(--color);
        border: none;
        --spacing: calc(var(--stroke-peptide) * 2 * var(--ion-bar-width-factor));
        --pad-left: var(--padding);
        --pad-right: var(--padding);


        &.a,
        &.b,
        &.c {
            top: calc(var(--offset) + 0.5 * var(--stroke-peptide));
            bottom: unset;
        }

        &.d {
            top: calc(var(--fragments-padding) + 1em);
            bottom: unset;
        }

        &.x,
        &.y,
        &.z {
            bottom: calc(var(--offset) + 0.5 * var(--stroke-peptide));
            top: unset;
        }

        &.v,
        &.w {
            bottom: calc(var(--fragments-padding) + 1em);
            top: unset;
        }
    }
}

.spectrum.peptide-intensity-ion.compact .peptide {
    --ion-bar-width-factor: 1;
    --offset: 1.5em;
    --padding: 0px;
}


#spectrum-wrapper.legend-ion {

    & .a,
    & .Y {
        --color: var(--color-blue);
    }

    & .b {
        --color: var(--color-green);
    }

    & .c {
        --color: var(--color-red);
    }

    & .d {
        --color: var(--color-yellow);
    }

    & .w {
        --color: var(--color-yellow-dark);
    }

    & .v {
        --color: var(--color-purple);
    }

    & .x {
        --color: var(--color-blue-dark);
    }

    & .y {
        --color: var(--color-green-dark);
    }

    & .z,
    & .z· {
        --color: var(--color-red-dark);
    }

    & .oxonium {
        --color: var(--color-blue-light);
    }

    & .multi {
        --color: var(--color-yellow);
    }

    & .precursor {
        --color: var(--color-purple-dark);
    }

    & .unassigned {
        --color: var(--color-halfway);
    }
}

.spectrum.legend-peptidoform {
    & .ion-series {
        --color: var(--color-halfway);
    }

    & .p0,
    & .p15,
    & .p30 {
        --color: var(--color-blue);
    }

    & .p1,
    & .p16,
    & .p31 {
        --color: var(--color-red);
    }

    & .p2,
    & .p17,
    & .p32 {
        --color: var(--color-green);
    }

    & .p3,
    & .p18,
    & .p33 {
        --color: var(--color-purple);
    }

    & .p4,
    & .p19,
    & .p34 {
        --color: var(--color-yellow);
    }

    & .p5,
    & .p20,
    & .p35 {
        --color: var(--color-blue-dark);
    }

    & .p6,
    & .p21,
    & .p36 {
        --color: var(--color-red-dark);
    }

    & .p7,
    & .p22,
    & .p37 {
        --color: var(--color-green-dark);
    }

    & .p8,
    & .p23,
    & .p38 {
        --color: var(--color-purple-dark);
    }

    & .p9,
    & .p24,
    & .p39 {
        --color: var(--color-yellow-dark);
    }

    & .p10,
    & .p25,
    & .p40 {
        --color: var(--color-blue-light);
    }

    & .p11,
    & .p26,
    & .p41 {
        --color: var(--color-red-light);
    }

    & .p12,
    & .p27,
    & .p42 {
        --color: var(--color-green-light);
    }

    & .p13,
    & .p28,
    & .p43 {
        --color: var(--color-purple-light);
    }

    & .p14,
    & .p29,
    & .p44 {
        --color: var(--color-yellow-light);
    }

    & .mp {
        --color: var(--color-red-light);
    }

    & .unassigned {
        --color: var(--color-halfway);
    }
}

.spectrum.legend-peptide {
    & .ion-series {
        --color: var(--color-halfway);
    }

    & .pu0,
    & .pu15,
    & .pu30 {
        --color: var(--color-blue);
    }

    & .pu1,
    & .pu16,
    & .pu31 {
        --color: var(--color-red);
    }

    & .pu2,
    & .pu17,
    & .pu32 {
        --color: var(--color-green);
    }

    & .pu3,
    & .pu18,
    & .pu33 {
        --color: var(--color-purple);
    }

    & .pu4,
    & .pu19,
    & .pu34 {
        --color: var(--color-yellow);
    }

    & .pu5,
    & .pu20,
    & .pu35 {
        --color: var(--color-blue-dark);
    }

    & .pu6,
    & .pu21,
    & .pu36 {
        --color: var(--color-red-dark);
    }

    & .pu7,
    & .pu22,
    & .pu37 {
        --color: var(--color-green-dark);
    }

    & .pu8,
    & .pu23,
    & .pu38 {
        --color: var(--color-purple-dark);
    }

    & .pu9,
    & .pu24,
    & .pu39 {
        --color: var(--color-yellow-dark);
    }

    & .pu10,
    & .pu25,
    & .pu40 {
        --color: var(--color-blue-light);
    }

    & .pu11,
    & .pu26,
    & .pu41 {
        --color: var(--color-red-light);
    }

    & .pu12,
    & .pu27,
    & .pu42 {
        --color: var(--color-green-light);
    }

    & .pu13,
    & .pu28,
    & .pu43 {
        --color: var(--color-purple-light);
    }

    & .pu14,
    & .pu29,
    & .pu44 {
        --color: var(--color-yellow-light);
    }

    & .mpp {
        --color: var(--color-red-light);
    }

    & .unassigned {
        --color: var(--color-halfway);
    }
}

.cross-link {

    &.c0,
    &.c15,
    &.c30 {
        --color-xl: var(--color-blue);
    }

    &.c1,
    &.c16,
    &.c31 {
        --color-xl: var(--color-green);
    }

    &.c2,
    &.c17,
    &.c32 {
        --color-xl: var(--color-red);
    }

    &.c3,
    &.c18,
    &.c33 {
        --color-xl: var(--color-yellow);
    }

    &.c4,
    &.c19,
    &.c34 {
        --color-xl: var(--color-purple);
    }

    &.c5,
    &.c20,
    &.c35 {
        --color-xl: var(--color-blue-dark);
    }

    &.c6,
    &.c21,
    &.c36 {
        --color-xl: var(--color-green-dark);
    }

    &.c7,
    &.c22,
    &.c37 {
        --color-xl: var(--color-red-dark);
    }

    &.c8,
    &.c23,
    &.c38 {
        --color-xl: var(--color-yellow-dark);
    }

    &.c9,
    &.c24,
    &.c39 {
        --color-xl: var(--color-purple-dark);
    }

    &.c10,
    &.c25,
    &.c40 {
        --color-xl: var(--color-blue-light);
    }

    &.c11,
    &.c26,
    &.c41 {
        --color-xl: var(--color-green-light);
    }

    &.c12,
    &.c27,
    &.c42 {
        --color-xl: var(--color-red-light);
    }

    &.c13,
    &.c28,
    &.c43 {
        --color-xl: var(--color-yellow-light);
    }

    &.c14,
    &.c29,
    &.c44 {
        --color-xl: var(--color-purple-light);
    }
}

#spectrum-wrapper .canvas .highlight {
    &.red {
        --color: var(--color-red);
    }

    &.green {
        --color: var(--color-green);
    }

    &.blue {
        --color: var(--color-blue);
    }

    &.yellow {
        --color: var(--color-yellow);
    }

    &.purple {
        --color: var(--color-purple);
    }
}

.spectrum .ion-series .n-term,
.spectrum .ion-series .c-term,
.spectrum .ion-series .neutral-loss,
.spectrum .ion-series .diagnostic {
    --color: var(--color-foreground);
}

.spectrum .complex-peptide {
    display: flex;
    flex-wrap: wrap;
}

.spectrum .canvas-wrapper {
    width: var(--width);
    height: var(--height);
    font-size: var(--fs-spectrum);
    display: grid;
    grid-column: 1/3;
    grid-template-rows: 1fr 2em;
    grid-template-columns: 5em 1fr;
    grid-template-areas:
        "y-axis canvas"
        ". x-axis";
}

.spectrum .first .canvas-wrapper {
    grid-template-rows: 1fr;
    grid-template-columns: 5em 1fr;
    grid-template-areas:
        "y-axis canvas"
}

.spectrum .y-axis {
    grid-area: y-axis;
    display: flex;
    justify-content: space-between;
    flex-direction: column-reverse;
    align-items: flex-end;
    position: relative;
    -webkit-user-select: none;
    user-select: none;

    &::after {
        content: "Intensity";
        position: absolute;
        top: 50%;
        left: -30%;
        text-align: center;
        font-style: italic;
        color: var(--color-halfway);
        transform: rotate(270deg);

    }

    #spectrum-wrapper.y-percentage &::after {
        content: "Intensity (%)";
    }

    & .tick {
        width: 0px;
        height: var(--stroke-spectrum);
        border-right: var(--stroke-spectrum) solid var(--color-foreground);
        overflow: visible;
        display: flex;
        flex-direction: row-reverse;
        align-items: center;

        & span {
            padding-right: var(--stroke-spectrum);
        }

        &:first-child {
            align-items: end;
        }

        &:last-child {
            align-items: start;
        }
    }
}

.spectrum .first .y-axis::after {
    top: 100%;
}

.spectrum .second .y-axis {
    flex-direction: column;

    &::after {
        display: none;
    }
}

.spectrum .x-axis {
    position: relative;
    grid-area: x-axis;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    -webkit-user-select: none;
    user-select: none;

    & .tick {
        width: 0px;
        height: var(--stroke-spectrum);
        border-right: var(--stroke-spectrum) solid var(--color-foreground);
        overflow: visible;
        display: flex;
        justify-content: center;

        & span {
            width: max-content;
            padding-top: calc(2 * var(--stroke-spectrum));

        }

        &:first-child {
            justify-content: start;
        }

        &:last-child {
            justify-content: end;
        }
    }

    &::after {
        content: "m/z";
        position: absolute;
        top: 50%;
        left: 50%;
        text-align: center;
        font-style: italic;
        color: var(--color-halfway);
    }
}

.spectrum .first .x-axis {
    display: none;
}

.spectrum .canvas {
    grid-area: canvas;
    position: relative;
    border-left: var(--stroke-spectrum) solid var(--color-foreground);
    border-bottom: var(--stroke-spectrum) solid var(--color-foreground);
    -webkit-user-select: none;
    user-select: none;
    overflow-x: clip;
    overflow-y: visible;

    & .zoom-out {
        position: absolute;
        top: 0px;
        right: 0px;
        color: var(--color-halfway);
        padding: .2rem;
        border: var(--stroke-spectrum) solid var(--color-halfway);
        background-color: transparent;
        border-radius: .2rem;
        font-size: 0.8em;
        display: none;
    }
}

.spectrum .second .canvas {
    border-bottom: none;
}

.spectrum .wrapper.dragging {
    cursor: pointer;
}

.spectrum:has(.wrapper.dragging) .canvas {
    background-color: var(--color-halfway-o);
}

.spectrum .canvas-wrapper.zoomed .zoom-out {
    display: block;
}

.spectrum .second .canvas-wrapper.zoomed .zoom-out {
    display: none;
}

.spectrum .canvas .zoom-out:hover,
.spectrum .canvas .zoom-out:focus {
    color: var(--color-primary);
    border-color: var(--color-primary);
}

.spectrum .canvas .zoom-out:active {
    color: var(--color-secondary);
    border-color: var(--color-secondary);
}

.spectrum .peak {
    position: absolute;
    --f: var(--intensity) / var(--max-intensity);
    height: min(calc(var(--f) * 100%), 100%);
    top: clamp(0%, calc(100% - var(--f) * 100%), 100%);
    left: calc(100% * (var(--mz) - var(--min-mz)) / (var(--max-mz) - var(--min-mz)));
    width: var(--stroke-spectrum);
    background-color: var(--color);
    z-index: 1;
    cursor: pointer;

    & * {
        cursor: inherit;
    }

    #spectrum-wrapper.y-sqrt & {
        --f: sqrt(var(--intensity)) / sqrt(var(--max-intensity));
    }

    &:hover {
        z-index: 2;
    }

    &[data-cut=true]::before {
        content: "▲";
        display: block;
        position: absolute;
        color: var(--color);
        left: -.25rem;
        top: -.6rem;
        font-size: .5em;
    }

    &.unassigned {
        display: none;
        z-index: 0;
        width: var(--stroke-spectrum-unassigned);
    }

    &>span {
        position: absolute;
        top: -1.2em;
        left: -.2em;
        text-anchor: end;
        z-index: 10;
        opacity: 0;
        width: max-content;

        #spectrum-wrapper.show-charge:not(.rotate-label) & {
            top: -1.6em;
        }

        #spectrum-wrapper.show-charge:not(.rotate-label) &,
        #spectrum-wrapper.show-series:not(.rotate-label) & {
            left: -.5em;
        }

        #spectrum-wrapper.rotate-label & {
            transform: rotate(-90deg);
            transform-origin: left center;
            top: -1em;
            left: .15em;
        }

        #spectrum-wrapper.rotate-label.show-charge & {
            top: -1.1em;
            left: -.15em;
        }

        #spectrum-wrapper.rotate-label.show-charge.show-series & {
            top: -1.4em;
            left: -.15em;
        }
    }

    &>.glycan {
        display: none;
        transform: translate(calc(var(--midpoint) * -1px), calc(-100% - var(--stroke-spectrum)));
        position: absolute;
    }

    &[data-show-glycan=true]:not([data-show-glycan-manually=false])>.glycan,
    &[data-show-glycan-manually=true]>.glycan,
    &:hover>.glycan {
        display: block;
    }

    &[data-show-label=true]:not([data-show-label-manually=false]) span:not(.multi),
    &[data-show-label-manually=true] span:not(.multi) {
        opacity: 1;
    }

    &:hover>span {
        color: var(--color-primary);
        font-weight: 500;
        opacity: 1;
    }

    &>span.multi {
        top: .5em;
        opacity: 0;
        border: 2px solid var(--color-halfway);
        background: var(--color-background);
        color: var(--color-foreground);
        padding: 5px 10px 10px 5px;
        margin: 2px;
        margin-top: -10px;
        pointer-events: none;
    }

    &:hover>span.multi {
        opacity: 1;
    }

    &>span.multi>span {
        display: block;
    }

    &:hover span.special::after {
        content: var(--content);
        position: absolute;
        display: block;
    }

    &:not(.cut):hover::after,
    &[data-show-m-z=true]:not([data-show-m-z-manually=false])::after,
    &[data-show-m-z-manually=true]::after {
        content: attr(data-label);
        color: var(--color);
        padding-left: calc(var(--stroke-spectrum) * 2);
        bottom: min(100%, var(--height));
    }

    &:not(.cut):where(.multi, .mp, .mpp):hover::after {
        display: block;
        transform: translateY(-3.5rem);
    }

    &.theoretical,
    &.theoretical:not(:hover) span,
    & .charge,
    & .series,
    & .glycan-id,
    & .peptide-id,
    & .neutral-losses,
    & .cross-links,
    & .ambiguous-amino-acids,
    & .modifications,
    & .charge-carriers,
    & .glycan-peptide-fragment {
        display: none;
    }
}

.spectrum.force-show-label .peak,
.spectrum.force-show-m-z .peak,
.spectrum.force-show-hide .peak {
    cursor: crosshair;
}

.spectrum.show-unassigned .peak.unassigned {
    display: block;
}

.spectrum.distance {
    cursor: ew-resize;

    & * {
        cursor: inherit;
    }

    & .peak {
        cursor: pointer;
    }
}

.spectrum .distance {
    position: absolute;
    --f: var(--intensity) / var(--max-intensity);
    --_clr: var(--color-halfway-fg);
    left: calc(100% * (var(--start-mz) - var(--min-mz)) / (var(--max-mz) - var(--min-mz)));
    width: calc(100% * (var(--end-mz) - var(--start-mz)) / (var(--max-mz) - var(--min-mz)));
    height: 0;
    bottom: min(calc(var(--f) * 100% - 1px), 100%);
    border: 1px dashed var(--_clr);
    z-index: 2;
    cursor: pointer;

    &::before {
        content: attr(data-label);
        position: absolute;
        width: 100%;
        top: -1.5em;
        color: var(--_clr);
        text-align: center;
        font-size: calc(0.8 * var(--fs-spectrum));
    }

    &:hover {
        --_clr: var(--color-foreground);
    }

    &:active {
        --_clr: var(--color-primary);
    }
}

.spectrum.show-charge .charge,
.spectrum.show-series .series,
.spectrum.show-glycan-id .glycan-id,
.spectrum.show-peptide-id .peptide-id,
.spectrum.show-neutral-losses .neutral-losses,
.spectrum.show-cross-links .cross-links,
.spectrum.show-ambiguous-amino-acids .ambiguous-amino-acids,
.spectrum.show-modifications .modifications,
.spectrum.show-charge-carriers .charge-carriers,
.spectrum.show-glycan-peptide-fragments .glycan-peptide-fragment {
    display: inline;
}

.spectrum.show-charge sub {
    display: inline-block;
    margin-left: calc(-1ch * var(--charge-width, 0));
    min-width: calc(1ch * var(--charge-width, 0));
}

.spectrum .second .peak {
    top: 0;

    & span {
        bottom: -1.6em;
        top: unset;
    }

    &.cut::after {
        content: "▼";
        bottom: -.45rem;
        top: unset;
    }
}

.spectrum.theoretical .peak.theoretical {
    height: calc(var(--stroke-spectrum) * 4);
    bottom: calc(var(--stroke-spectrum) * -4);
    display: block;
}

.spectrum .highlight .peak {
    opacity: .2;

    &.highlight {
        opacity: 1;
    }

    &:not(.highlight) span {
        opacity: 0;
    }
}

.spectrum .selection {
    border: 2px dashed var(--color-primary);
    height: 100%;
    box-sizing: border-box;
    position: absolute;
    pointer-events: none;

    &.second {
        border-top: none;
    }
}

.spectrum .first .selection.first {
    border-bottom: none;
}

.spectrum .wrapper.dragging * {
    pointer-events: none;
}

.spectrum label[for^=collapsible],
.spectrum .collapsible {
    grid-column: 1 / -1;
}

#spectrum-fragment-table .show-unassigned:has(input:not(:checked))~table tr.unassigned,
#spectrum-fragment-table .show-matched:has(input:not(:checked))~table tr.matched,
#spectrum-fragment-table .show-missing-fragments:has(input:not(:checked))~table tr.fragment {
    display: none;
}

#spectrum-table {
    table-layout: auto;
}

.spectrum .general-stats {
    margin-top: 1em;
}

.hidden,
[hidden] {
    display: none;
}

@media print {
    body {
        font-size: 0.8em;
    }

    input[type=number]::-webkit-outer-spin-button,
    input[type=number]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number] {
        -moz-appearance: textfield;
        appearance: textfield;
    }

    .graph,
    .spectrum,
    .spectrum .canvas-wrapper {
        page-break-inside: avoid;
    }

    .report label,
    .report .collapsible>label {
        background: none;
        color: var(--color-foreground);
        border: none;
    }

    .collapsible {
        border: none;
        padding: 0;
        display: block;
    }

    .info-link {
        color: var(--color-foreground);
        border: none;
        font-size: 1em;
    }

    .table-header .graph {
        height: auto;
    }

    .phylogenetic-tree input:checked+label,
    .graph input:checked+label {
        display: inline-block;
    }

    .phylogenetic-tree input:checked+label::before {
        display: inline-block;
        content: "Displays:";
        margin-right: .5em;
    }

    .phylogenetic-tree .info-link text {
        fill: var(--color-foreground);
        font-size: 16px;
    }

    .table-header {
        display: block;
    }

    .histogram-header span {
        font-size: .6em;
        font-weight: normal;
    }

    .spectrum .legend input {
        border: none !important;
        margin-left: .2rem;
        width: max-content;
    }

    .phylogenetic-tree label,
    .graph label,
    .phylogenetic-tree .info-link rect,
    .text-header,
    .copy-data,
    .source-code,
    .user-help,
    .zoom-out,
    .report label::after,
    .overview h3,
    .overview p,
    .collapsible>.collapsible>label:last-of-type,
    [id$="cdr"] p,
    [id$="segment-joining"] p,
    [id$="segment-joining"] pre,
    [id$="segment-joining"] .title,
    input[type=range],
    input,
    button,
    .button,
    footer,
    .settings,
    input[type=checkbox]:not(:checked)+.collapsible,
    .input-settings,
    label,
    .input,
    #peptides,
    #tools,
    #custom-modifications,
    .error {
        display: none !important;
    }

    .spectrum .legend .has-slider input[type=number] {
        width: 3ch;
    }
}

@media (prefers-contrast: more) {
    .ambiguity-overview svg .node:hover {
        fill: transparent;
        outline: 2px solid var(--color-primary);
    }

    .ambiguity-overview svg .node.highlight {
        fill: transparent;
        outline: 2px solid var(--color-tertiary);
    }

    td.bar::before {
        display: none;
    }

    td {
        border-color: var(--color-foreground);
    }

    .alignment .alignment-wrapper,
    .ambiguity-overview #ambiguity-wrapper {
        border-color: var(--color-halfway);
    }

    .sequence-logo-position.highlight {
        background-color: transparent;
        outline: 2px solid var(--color-tertiary);
    }

    .spectrum:has(.wrapper.dragging) .canvas {
        background-color: transparent;
    }

    .spectrum .legend>.ion:hover,
    .spectrum .legend>.ion:focus {
        background-color: transparent;
        outline: 2px solid var(--color-primary);
    }

    .spectrum .legend>.ion.permanent {
        outline-color: var(--color-secondary);
    }
}

/* Custom symbols */

.cs-xl-intact,
.cs-xl-broken {
    width: 1em;
    height: 1em;
    display: inline-block;
    background-repeat: no-repeat;
    background-size: cover;
}

.cs-xl-intact {
    background-image: url('data:image/svg+xml;utf8,<svg width="100" height="100" version="1.1" viewBox="0 0 26.458 26.458" xmlns="http://www.w3.org/2000/svg"> <path fill="%231e1e1e" d="m3.1758 5.291v8.5996h18.785v7.2754h1.3223v-8.5977h-18.785v-7.2773z"/></svg>');
}

.cs-xl-broken {
    background-image: url('data:image/svg+xml;utf8,<svg width="100" height="100" version="1.1" viewBox="0 0 26.458 26.458" xmlns="http://www.w3.org/2000/svg"><path fill="%231e1e1e1" d="m3.1745 5.2917v8.5995h7.3809l0.76378-1.3224h-6.8208v-7.2771zm12.701 2.0293-6.4394 11.156 1.1467 0.66042 6.4394-11.154zm0.02791 5.2477-0.76326 1.3224h6.8192v7.2755h1.3245v-8.5979z"/></svg>');
}

@media screen and (prefers-color-scheme: dark) {
    .cs-xl-intact {
        background-image: url('data:image/svg+xml;utf8,<svg width="100" height="100" version="1.1" viewBox="0 0 26.458 26.458" xmlns="http://www.w3.org/2000/svg"> <path fill="%23d4d4d4" d="m3.1758 5.291v8.5996h18.785v7.2754h1.3223v-8.5977h-18.785v-7.2773z"/></svg>');
    }

    .cs-xl-broken {
        background-image: url('data:image/svg+xml;utf8,<svg width="100" height="100" version="1.1" viewBox="0 0 26.458 26.458" xmlns="http://www.w3.org/2000/svg"><path fill="%23d4d4d4" d="m3.1745 5.2917v8.5995h7.3809l0.76378-1.3224h-6.8208v-7.2771zm12.701 2.0293-6.4394 11.156 1.1467 0.66042 6.4394-11.154zm0.02791 5.2477-0.76326 1.3224h6.8192v7.2755h1.3245v-8.5979z"/></svg>');
    }
}

.grow {
    flex-grow: 1;
    height: 2rem;
}

.row {
    display: flex;
    justify-content: center;
}

.header {
    display: flex;
    justify-content: space-between;
    padding: 0 1rem;
    --color-primary: var(--color-primary-s2);
    color: var(--color-halfway-fg);

    .theme div {
        display: inline-block
    }
}

#export-sequence {
    margin: 0;
    padding: 0;

    span {
        user-select: all;
    }
}

#details-formula {
    min-width: 10rem;
    display: inline-block;
}

.s:not(.swap) {
    width: calc(var(--w) * 1.001ch);
    transform:
        scaleX(calc(var(--w) / var(--i)));
    display: inline-block;
    color: var(--color-halfway);
    transform-origin: center left;
}

.s.swap,
.s.swap {
    text-decoration: underline var(--color-halfway);
}

.alignment .alignment-body .template,
.alignment .alignment-body .numbering {
    grid-column: 1/ -1;
}

.alignment .alignment-wrapper {
    margin-left: 0;
}

.input-settings {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr 2fr;
    gap: .5rem 1rem;
}

@media (max-width: 1000px) {
    .input-settings {
        grid-template-columns: 1fr 2fr;
    }
}

.input-flex {
    display: flex;
    flex-direction: row;
    gap: .5rem;
    margin: 1rem 0;
    align-items: baseline;
    justify-content: space-evenly;
    flex-wrap: wrap;

    & .usi {
        background: var(--color-secondary);
        border-radius: 100000px;

        & a {
            color: var(--color-background);
            text-decoration: none;
            padding: 0 0 0 1rem;
        }

        & input {
            width: clamp(10ch, 50vw, 100ch);
            border-color: var(--color-secondary);

            &:hover {
                border-color: var(--color-green-light);
            }

            &:active {
                border-color: var(--color-foreground);
            }
        }

        & button {
            --_clr-main: var(--color-secondary);
            --_clr-hover: var(--color-green-light);
            border-radius: 0 1000000px 1000000px 0;
            margin: 0
        }
    }
}

:is(.input-settings, .input-flex) option {
    background: var(--color-background);
}

pre,
:is(.input-settings, .input-flex) textarea,
.peptide-input,
#export-sequence span {
    font-family: 'Roboto Mono', monospace;
    min-height: 2rem;
    resize: vertical;
    word-wrap: break-word;
    word-break: break-all;
    white-space: pre-wrap;
}

pre {
    min-height: 0;
    padding: 0 1rem;
    overflow: hidden;
}

.context:has(.error) {
    border-color: var(--color-red);
}

.context .error {
    text-decoration: underline;
    text-decoration-style: wavy;
    text-decoration-color: var(--color-red);
    color: var(--color-red);
}

.input-settings .wide {
    grid-column: 1/-1;
}

.input-settings h2 {
    grid-column: 1 /-1;
}

.input-settings .col-2 {
    grid-column: 2;
}

:is(.input-settings, .input-flex) .combined-input {
    display: flex;
}

:is(.input-settings, .input-flex) .combined-input span {
    margin-left: .5rem;
}

output.error,
output.warning {
    margin: .5rem;
    padding-left: .5rem;
    border: 2px solid var(--color-red);
    color: var(--color-foreground);
    display: block;

    &.warning {
        border-color: var(--color-yellow);
    }

    &.hidden,
    &[hidden] {
        display: none;
    }

    & .raw {
        white-space: pre;
        font-family: 'Roboto Mono', monospace;
    }

    &.error {
        line-height: 1;

        .title {
            color: var(--color-red);
        }

        .version {
            margin-top: 0;
            color: var(--color-halfway-fg);
        }

        .error {
            overflow-x: auto;
            overflow-y: visible;
            border: 2px solid var(--color-halfway-bg);
            font-family: 'Roboto Mono', monospace;
            padding: 4px;
            margin: -2px;
            width: fit-content;
        }
    }

    &.warning .title {
        color: var(--color-yellow);
    }

    & .context {
        display: flex;
        flex-direction: row;
        gap: 1rem;
        overflow-x: auto;
        overflow-y: visible;
        border: 2px solid var(--color-halfway-bg);
        padding: 4px;
        margin: -2px;
        width: fit-content;

        & .line-number {
            color: var(--color-halfway-fg);
        }

        & pre {
            padding: 0;
            margin: 0;
            resize: none;
            white-space: pre;
            word-wrap: normal;
            word-break: keep-all;
            overflow: visible;
        }
    }

    & label {
        display: block;
        margin: 1em 0;

        &:not(:has(:checked))+ul {
            display: none;
        }
    }

    & ul {
        list-style: none;
        padding: .5em;

        & .underlying-error {
            border: 2px solid var(--color-red-o);
            margin: 2px;
            padding: 2px 0 2px .5rem;
        }
    }
}

.selected-neutral-loss {
    padding-left: .5em;
}

dialog.neutral-loss {
    min-width: 525px;
    max-width: 750px;

    &>button {
        margin-top: 1rem;
    }

    input[type=number] {
        margin: 0px;
        margin-bottom: 3px;
        margin-right: 0.5em;
    }

    .col-2 {
        column-count: 2;

        &>div {
            break-inside: avoid;

            &>h3:first-child {
                margin-top: 0
            }
        }
    }
}

.hidden {
    display: none;
}

.center {
    align-self: center;
}

.colour-dot {
    width: 1rem;
    height: 1rem;
    border-radius: 50%;
    background-color: var(--color-halfway);
    display: inline-block;

    &.Green {
        background-color: var(--color-green);
    }

    &.Yellow {
        background-color: var(--color-yellow);
    }

    &.Red {
        background-color: var(--color-red);
    }
}

#custom-models {
    .name {
        margin: 0;
        margin-top: 0.5em;
    }
}

.custom-model {
    display: grid;
    grid-column: 1 / -1;
    grid-template-columns: repeat(5, auto);
    gap: inherit;
    align-items: baseline;

    & .col-2 {
        grid-column: span 2;
    }

    & .grid-row {
        display: grid;
        grid-template-columns: subgrid;
        grid-column: 1 / -1;
    }

    & .charge-range {
        span {
            white-space: nowrap;

            &:nth-child(2) {
                margin: 2px;
            }
        }

        input {
            border-left: none;
            width: 3rem;
            padding: 4px;
        }
    }

    & .variant {
        label {
            width: 2em;
            display: inline-block;
        }

        & input {
            margin: 2px;

            &:not(:first-child) {
                margin-left: 4px;
            }
        }
    }

    .satellite-ion-location {
        display: flex;
        gap: 4px;
        align-items: baseline;

        label input {
            margin-left: 2px;
        }

        .separated-input {
            flex-grow: 1;
        }
    }
}

.select-input,
.grouped-input {
    display: flex;
}

.select-input *,
.grouped-input * {
    flex-grow: 1;
    width: 1px;
}

.grouped-input *:where(input, select):not(:first-child) {
    border-left: none;
}

.select-input input {
    display: none;
    border-left: none;
}

.select-input:has(select.arg-1) input:nth-of-type(1),
.select-input:has(select.arg-2) input:nth-of-type(1),
.select-input:has(select.arg-2) input:nth-of-type(2) {
    display: block;
}


/* error-graph */
.spectrum .canvas-wrapper {
    height: calc(2 * var(--height));
    grid-template-rows: 1fr 2em 1fr;
    grid-template-areas:
        "y-axis canvas"
        ". x-axis"
        "sg-y-axis error-graph";
}

.spectrum .error-graph {
    --graph-height: 500px;
    --graph-height-inc: calc(var(--graph-height) + 10px);
    --radius: 50%;
    display: flex;
    flex-basis: 100%;
    grid-area: error-graph;
    position: relative;
    overflow: hidden;
    border-bottom: none;

    &>label {
        border: 2px solid var(--color-halfway);
        padding: .25rem;
        user-select: none;
        border-radius: 5px;
    }
}


.error-graph label:has(+input:checked),
.error-graph label:has(input:checked) {
    border-color: var(--color-primary);
}

.error-graph-y-axis {
    grid-area: sg-y-axis;
    display: flex;
    flex-direction: column;
    height: var(--graph-height-inc);
    justify-content: space-between;
    align-items: flex-end;
    padding-right: 2px;
    position: relative;
    overflow: hidden;
}

.error-graph-y-axis::after {
    content: "";
    display: block;
    position: absolute;
    height: 2px;
    width: calc(100vw - 200% - 55px);
    left: 100%;
    background-color: var(--color-foreground);
    top: var(--graph-height-inc);
    z-index: 0;
}

.error-graph-y-axis .title {
    writing-mode: vertical-rl;
    align-self: center;
    transform: rotate(180deg);
    font-style: italic;
    color: var(--color-halfway);
}

.error-graph :is(.y-axis, .x-axis) :is(.max, .min) {
    font-size: 10px;
}

.error-graph-y-axis::after,
.error-graph .x-axis::after {
    display: none;
}

.error-graph-y-axis #error-graph-density {
    width: 2rem;
    height: 100%;
    position: absolute;

    svg {
        width: 100%;
        height: 100%;
        --axis-range: calc(var(--y-max) - var(--y-min));
        --visible-range: calc(max(var(--max), var(--y-max)) - min(var(--min), var(--y-min)));
        --y-offset: calc(var(--y-max) - var(--max));
        transform: translateX(2px) translateY(calc(var(--y-offset) / var(--axis-range) * var(--height))) scaleY(calc(var(--visible-range) / var(--axis-range)));
        transform-origin: top center;

        & .line {
            stroke: var(--color-primary);
            stroke-width: var(--stroke-spectrum);
            fill: transparent;
        }

        & .volume {
            fill: var(--color-primary-o);
        }
    }
}

.error-graph .x-axis {
    position: absolute;
    width: 100%;
    border-top: 2px solid var(--color-foreground);
    top: clamp(0px, calc(var(--y-max) / (var(--y-max) - var(--y-min)) * 100% - 1px), 100%);
    pointer-events: none;
    transform: translateY(2px);
}

.error-graph .x-axis.hug-bottom {
    top: unset !important;
    bottom: 0px !important;
    border-top: none;
    border-bottom: 2px solid var(--color-foreground);
}

.error-graph .point.unassigned {
    z-index: 1;
}

.error-graph .point {
    width: 5px;
    height: 5px;
    background-color: var(--color);
    border-radius: var(--radius);
    position: absolute;
    --y: 0;
    top: calc(100% * (var(--y-max) - var(--y)) / (var(--y-max) - var(--y-min)));
    left: calc(100% * (1 - (var(--max-mz) - var(--mz)) / (var(--max-mz) - var(--min-mz))));
    display: block;

    &.hidden {
        display: none;
    }
}

.error-graph .ruler {
    border-top: 2px dashed var(--color-foreground);
    width: 100%;
    height: 0;
    left: 0;
    right: 0;
    display: none;
    opacity: 0.5;
    position: absolute;
    pointer-events: none;
}

.error-graph:hover .ruler {
    display: block;
}

.spectrum.error-graph-relative .abs,
.spectrum.error-graph-absolute .rel {
    display: none;
}

.spectrum.error-graph-intensity .point {
    --s: calc(sqrt(var(--intensity)) / sqrt(var(--max-intensity)) * 6px + 2px);
    width: var(--s);
    height: var(--s);
}

.spectrum .error-graph.highlight .point {
    opacity: 0.2;
}

.spectrum .error-graph.highlight .point.highlight {
    opacity: 1;
}

.error-graph-y-axis .density.rel {
    --scale: calc((var(--rel-max-initial) - var(--rel-min-initial)) / (var(--y-max) - var(--y-min)));
    --translate: calc((var(--y-max) - var(--rel-max-initial)) / (var(--rel-max-initial) - var(--rel-min-initial)) * var(--height));
}

.error-graph-y-axis .density.abs {
    --scale: calc((var(--abs-max-initial) - var(--abs-min-initial)) / (var(--y-max) - var(--y-min)));
    --translate: calc((var(--y-max) - var(--abs-max-initial)) / (var(--abs-max-initial) - var(--abs-min-initial)) * var(--height));
}

.error-graph-y-axis .density {
    transform:
        scale(1, var(--scale)) translate(0, var(--translate));
}

/* Loading animation */

#annotate-button,
#save-spectrum {
    height: 2rem;
}

.orbitrap {
    stroke-width: 0.3px;
    fill: none;
    height: 1rem;
    visibility: hidden;

    & .base {
        stroke: var(--color-foreground);
    }

    & .trace {
        stroke-width: 0.5px;
        stroke: var(--color-red);
        stroke-dasharray: 1 6;
        stroke-dashoffset: 0;
        transform: translateX(-1px);
        animation: move-dash 2s infinite linear;
    }
}

.loading~.orbitrap {
    visibility: visible;
    height: 5rem;
}

.loading {
    pointer-events: none;
    border-color: var(--color-halfway);
    background-color: var(--color-halfway);
}

.loading:not(:has(+.orbitrap))::after {
    content: "⌬";
    display: inline-block;
    animation: rotate 2s infinite linear;
    margin-left: 1rem;
    font-size: 0.9rem;
    vertical-align: middle;
    color: var(--color-foreground);
}

/* resize wrapper */
.resize-wrapper {
    width: calc(100% + 1rem);
    margin: 0 -0.5rem;
    border-top: 2px solid var(--color-halfway);
    resize: vertical;
    min-height: 100px;
    display: flex;
    flex-direction: row;
    overflow: hidden;
    padding-bottom: 2px;
    background-color: var(--color-halfway);
}

.resize-wrapper>.resize {
    width: 2px;
    min-width: 2px;
    max-width: 2px;
    flex: 0 0 2px;
    padding: 0;
    margin: 0;
    background-color: var(--color-halfway);
    border-left: 2px solid var(--color-background);
    cursor: col-resize;
    overflow: hidden;

    &.active {
        cursor: col-resize;

        &>.resize {
            background-color: var(--color-primary);
        }

        & * {
            pointer-events: none;
            user-select: none;
        }
    }
}

.resize-wrapper>div {
    padding: .5rem;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    min-width: 10%;
    overflow: hidden;
    overflow-y: scroll;
    background-color: var(--color-background);
}

.resize-wrapper>div:first-child {
    width: 50%;
}

.resize-wrapper>div:last-child {
    flex: 1;
}

.resize-wrapper>div table {
    width: 100%;
    max-width: 100%;
    table-layout: auto;
    word-break: break-all;
}

/* file drop hover */

html:not(.file-drop-hover) .cancel-drop {
    display: none;
}

.cancel-drop {
    position: sticky;
    top: 1rem;
    right: 1rem;
    width: fit-content;
}

html.file-drop-hover::before {
    content: "Drop here";
    display: flex;
    vertical-align: middle;
    justify-content: center;
    align-items: center;
    font-size: 3em;
    color: var(--color-background);
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: color-mix(in oklab, var(--color-primary) 20%, transparent);
}

/* Search */

.match {
    color: var(--color-primary);
}

/* Formula details */

.isotopes-distribution {
    display: flex;
    height: 100px;
    border-bottom: 2px solid var(--color-halfway);
    align-items: end;

    & span {
        border-left: 2px solid var(--color-primary);
        height: calc(var(--intensity) * 100%);
        top: calc((1 - var(--intensity)) * 100%);
        flex-shrink: 1;
        flex-basis: 1rem;
    }

    & .mono {
        border-color: var(--color-red);
    }

    & .most-abundant {
        border-color: var(--color-green);
    }

    & .mono.most-abundant {
        border-left: 1px solid var(--color-red);
        border-right: 1px solid var(--color-green);
        margin-right: 1rem;
        flex-basis: 0;
    }
}

/* Footer */

footer {
    background-color: var(--color-halfway-bg);
    display: flex;
    margin: -.5rem;
    padding: 1rem;
    gap: 2rem;
    justify-content: center;

    &>* {
        display: block;
        color: var(--color-halfway-fg);
        padding: 0;
        margin: 0;
    }
}

/* General stats */
.general-stats td {
    padding: 0 .25rem;
    vertical-align: top;

    &:has(table) {
        padding: 0;
    }

    & table {
        width: -webkit-fill-available;

        & td:first-child {
            border-left: none;
        }

        & td:last-child {
            border-right: none;
        }

        & tr:first-child td {
            border-top: none;
        }

        & tr:last-child td {
            border-bottom: none;
        }
    }
}

label:has(#general-stats-show-details:not(:checked))+.general-stats .fragments-detail {
    display: none;
}

.separated-input {
    & output.error {
        display: none
    }

    &.error:focus-within output.error {
        display: block;
    }

    &>.values {
        display: flex;
        flex-wrap: wrap;
        border-radius: 0;
        padding: .2rem;
        cursor: pointer;
        border: 2px solid var(--color-halfway);
        background: var(--color-background);
        font-size: 1rem;

        &:hover {
            border-color: var(--color-halfway-fg);
        }

        &:focus-visible,
        &:focus-within {
            border-color: var(--color-foreground);
            outline: none;
        }

        &:active {
            border-color: var(--color-primary);
        }

        & .input {
            border: none;
            flex-grow: 1;

            &:first-child:empty::after {
                content: attr(placeholder);
                display: inline;
                color: var(--color-halfway);
                text-overflow: ellipsis;
                flex-shrink: 1;
            }

            &:not(:first-child:empty)::after {
                display: none;
            }
        }

        &>.element {
            list-style: none;
            border: 2px solid var(--color-halfway);
            padding: 2px;
            margin: 0;

            &:hover {
                border-color: var(--color-halfway-fg);
            }

            &:active {
                border-color: var(--color-primary);
            }

            &:focus-visible {
                border-color: var(--color-foreground);
                outline: none;
            }

            &:not(:first-child) {
                margin-left: 2px;
            }

            & sub {
                margin-bottom: -4px;
                display: inline-block;
            }

            & sup {
                margin-top: -4px;
                display: inline-block;
            }

            & .formula {
                border: none;
            }

            &>*:not(.delete) {
                pointer-events: none;
            }

            &>.delete {
                background: transparent;
                color: var(--color-halfway);
                border: none;
                border-radius: 0;
                padding: 0;
                margin: 0;
                padding-left: .5rem;
                padding-right: 2px;
                cursor: pointer;

                &:hover {
                    color: var(--color-halfway-fg);
                }

                &:active {
                    color: var(--color-red);
                }

                &:focus-visible {
                    color: var(--color-foreground);
                    outline: none;
                }
            }
        }

        & .clear {
            display: none;
        }

        & *+*+.clear {
            display: block;
        }
    }
}

#custom-mod-dialog {
    & .basic {
        display: grid;
        gap: 1rem;
        grid-template-columns: 2fr 1fr 2fr;
        align-items: baseline;

        p {
            margin: 0;
        }

        label,
        &>span {
            display: flex;
            gap: .5rem;
            align-items: baseline;
            justify-self: normal;

            input {
                flex-grow: 1;
            }
        }

        #custom-mod-formula {
            flex-grow: 1;

            & .formula {
                border: none;

                & sub {
                    margin-bottom: -4px;
                    display: inline-block;
                }

                & sup {
                    margin-top: -4px;
                    display: inline-block;
                }
            }
        }

        & output.error {
            grid-column: 1 / -1;
            justify-self: normal;
            margin: 0;
        }

        &:not(.error) output.error {
            display: none;
        }
    }

    & .row {
        justify-content: start;
        align-items: baseline;
        gap: .5rem;
        margin-top: .5rem;
    }

    &:not(:has(#custom-mod-type-single:checked)) .single,
    &:not(:has(#custom-mod-type-linker:checked)) .linker,
    &:not(:has(#custom-mod-linker-asymmetric:checked)) .asymmetric {
        display: none;
    }
}

.list-input {
    &>.modal {
        border: 2px solid var(--color-foreground);
        padding: .5rem;
    }

    &:not(.creating) .modal {
        display: none;
    }

    &.creating .create {
        pointer-events: none;
        --_clr-main: var(--color-halfway);
        cursor: not-allowed;
        display: none;
    }

    &>.values {
        display: flex;
        flex-direction: column;
        padding: 0;
        margin: .5rem;
        gap: .5rem;

        &>.element {
            list-style: none;
            border: 2px solid var(--color-halfway);
            padding: 2px;
            margin: 0;
            width: fit-content;
            cursor: default;

            &:hover {
                border-color: var(--color-halfway-fg);
            }

            &:active {
                border-color: var(--color-primary);
            }

            &:focus-visible {
                border-color: var(--color-foreground);
                outline: none;
            }

            &>span {
                cursor: pointer;

                &>* {
                    pointer-events: none;
                }
            }


            &>.delete {
                background: transparent;
                color: var(--color-halfway);
                border: none;
                border-radius: 0;
                padding: 0;
                margin: 0;
                padding-left: .5rem;
                padding-right: 2px;
                cursor: pointer;

                &:hover {
                    color: var(--color-halfway-fg);
                }

                &:active {
                    color: var(--color-red);
                }

                &:focus-visible {
                    color: var(--color-foreground);
                    outline: none;
                }
            }
        }
    }
}

#custom-mods {
    padding: 0;
    margin: 0;

    &>li {
        display: block;
        margin-top: .5rem;
        margin-left: 2rem;
        position: relative;

        &::before {
            position: absolute;
            display: block;
            content: attr(data-id);
            width: 2rem;
            left: -2rem;
        }
    }

    button:not(:first-of-type) {
        margin-left: .5rem;
    }
}

#model-glycan-fragments-create {
    label {
        display: block;
    }

    #model-glycan-fragments-other {
        font-style: italic;
    }
}

.modification {
    p {
        margin: 0;
        padding-bottom: .5rem;
    }

    .cross-ids,
    .synonyms {
        display: flex;
        flex-wrap: wrap;
        align-items: baseline;
        gap: .5rem;
        padding: 0;
        margin: 0;
        padding-bottom: .5rem;

        &>li {
            display: block;
        }

        &>li:not(.title) {
            border: 2px solid var(--color-halfway-bg);
            border-radius: 6px;
            padding: 2px;
        }
    }

    .formula {
        color: var(--color-green);
    }
}

/* Raw files */

.rawfile {
    .header {
        display: flex;
        align-items: baseline;
        gap: 2rem;
        margin: .5rem 0;

        .spectrum-selection {
            display: flex;
            align-items: baseline;
            gap: 1rem;
            margin-left: auto;

            .combined-input {
                display: flex;
                align-items: baseline;
                gap: .5rem;
            }
        }
    }

    ul {
        padding: 0 0 0 .5rem;
    }

    li {
        word-break: break-all;
        display: block;
        margin-top: .5rem;
        margin-left: 4rem;
        position: relative;

        &::before {
            content: attr(data-index);
            display: inline-block;
            width: 4rem;
            margin-left: -4rem;
            vertical-align: baseline;
        }

        button {
            margin-right: .5rem;
        }

        span {
            padding: .5rem 0;
        }

        .tooltip {
            display: none;
        }

        &:has(span:hover) .tooltip,
        &:has(span:focus-visible) .tooltip,
        .tooltip:hover {
            display: block;
            position: absolute;
            background-color: var(--color-background);
            border: 2px solid var(--color-primary);
            padding: .5rem;
            z-index: 1;
        }
    }
}

.hint {
    color: var(--color-halfway-fg);
    padding-left: 1rem;
    font-style: italic;
}

#identified-peptide-details {
    table {
        table-layout: fixed;
    }
}